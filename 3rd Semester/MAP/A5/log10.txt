Program ID: 9
Execution Stack: 
((Ref(Integer) v), (( Allocate in heap: v --> Integer: 20), ((Ref(Ref(Integer)) a), (( Allocate in heap: a --> v), (( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a)))))))))
Symbol Table: 
OutPut: 
FileTable: 
Heap: 
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
(Ref(Integer) v)
(( Allocate in heap: v --> Integer: 20), ((Ref(Ref(Integer)) a), (( Allocate in heap: a --> v), (( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a))))))))
Symbol Table: 
OutPut: 
FileTable: 
Heap: 
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
(Ref(Integer) v)
(( Allocate in heap: v --> Integer: 20), ((Ref(Ref(Integer)) a), (( Allocate in heap: a --> v), (( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a))))))))
Symbol Table: 
OutPut: 
FileTable: 
Heap: 
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
(( Allocate in heap: v --> Integer: 20), ((Ref(Ref(Integer)) a), (( Allocate in heap: a --> v), (( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a))))))))
Symbol Table: 
v --> (0, Integer)
OutPut: 
FileTable: 
Heap: 
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
(( Allocate in heap: v --> Integer: 20), ((Ref(Ref(Integer)) a), (( Allocate in heap: a --> v), (( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a))))))))
Symbol Table: 
v --> (0, Integer)
OutPut: 
FileTable: 
Heap: 
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
( Allocate in heap: v --> Integer: 20)
((Ref(Ref(Integer)) a), (( Allocate in heap: a --> v), (( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a)))))))
Symbol Table: 
v --> (0, Integer)
OutPut: 
FileTable: 
Heap: 
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
( Allocate in heap: v --> Integer: 20)
((Ref(Ref(Integer)) a), (( Allocate in heap: a --> v), (( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a)))))))
Symbol Table: 
v --> (0, Integer)
OutPut: 
FileTable: 
Heap: 
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
((Ref(Ref(Integer)) a), (( Allocate in heap: a --> v), (( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a)))))))
Symbol Table: 
v --> (1, Integer)
OutPut: 
FileTable: 
Heap: 
1 --> Integer: 20
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
((Ref(Ref(Integer)) a), (( Allocate in heap: a --> v), (( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a)))))))
Symbol Table: 
v --> (1, Integer)
OutPut: 
FileTable: 
Heap: 
1 --> Integer: 20
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
(Ref(Ref(Integer)) a)
(( Allocate in heap: a --> v), (( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a))))))
Symbol Table: 
v --> (1, Integer)
OutPut: 
FileTable: 
Heap: 
1 --> Integer: 20
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
(Ref(Ref(Integer)) a)
(( Allocate in heap: a --> v), (( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a))))))
Symbol Table: 
v --> (1, Integer)
OutPut: 
FileTable: 
Heap: 
1 --> Integer: 20
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
(( Allocate in heap: a --> v), (( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a))))))
Symbol Table: 
a --> (0, Ref(Integer))
v --> (1, Integer)
OutPut: 
FileTable: 
Heap: 
1 --> Integer: 20
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
(( Allocate in heap: a --> v), (( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a))))))
Symbol Table: 
a --> (0, Ref(Integer))
v --> (1, Integer)
OutPut: 
FileTable: 
Heap: 
1 --> Integer: 20
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
( Allocate in heap: a --> v)
(( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a)))))
Symbol Table: 
a --> (0, Ref(Integer))
v --> (1, Integer)
OutPut: 
FileTable: 
Heap: 
1 --> Integer: 20
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
( Allocate in heap: a --> v)
(( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a)))))
Symbol Table: 
a --> (0, Ref(Integer))
v --> (1, Integer)
OutPut: 
FileTable: 
Heap: 
1 --> Integer: 20
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
(( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a)))))
Symbol Table: 
a --> (2, Ref(Integer))
v --> (1, Integer)
OutPut: 
FileTable: 
Heap: 
1 --> Integer: 20
2 --> (1, Integer)
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
(( Allocate in heap: v --> Integer: 30), (Print((Read From Heap: (Read From Heap: a)))))
Symbol Table: 
a --> (2, Ref(Integer))
v --> (1, Integer)
OutPut: 
FileTable: 
Heap: 
1 --> Integer: 20
2 --> (1, Integer)
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
( Allocate in heap: v --> Integer: 30)
(Print((Read From Heap: (Read From Heap: a))))
Symbol Table: 
a --> (2, Ref(Integer))
v --> (1, Integer)
OutPut: 
FileTable: 
Heap: 
1 --> Integer: 20
2 --> (1, Integer)
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
( Allocate in heap: v --> Integer: 30)
(Print((Read From Heap: (Read From Heap: a))))
Symbol Table: 
a --> (2, Ref(Integer))
v --> (1, Integer)
OutPut: 
FileTable: 
Heap: 
1 --> Integer: 20
2 --> (1, Integer)
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
(Print((Read From Heap: (Read From Heap: a))))
Symbol Table: 
a --> (2, Ref(Integer))
v --> (3, Integer)
OutPut: 
FileTable: 
Heap: 
1 --> Integer: 20
2 --> (1, Integer)
3 --> Integer: 30
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
(Print((Read From Heap: (Read From Heap: a))))
Symbol Table: 
a --> (2, Ref(Integer))
v --> (3, Integer)
OutPut: 
FileTable: 
Heap: 
1 --> Integer: 20
2 --> (1, Integer)
3 --> Integer: 30
-------------------------------------------------------------------------

Program ID: 9
Execution Stack: 
Symbol Table: 
a --> (2, Ref(Integer))
v --> (3, Integer)
OutPut: 
Integer: 20
FileTable: 
Heap: 
1 --> Integer: 20
2 --> (1, Integer)
3 --> Integer: 30
-------------------------------------------------------------------------

